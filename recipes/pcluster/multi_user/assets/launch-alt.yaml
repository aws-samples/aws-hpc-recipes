AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Create a multiuser instance of AWS ParallelCluster backed by AWS Managed Microsoft AD.

### Stack metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Cluster Design
        Parameters:
          - OS
          - Architecture
          - QueueName
          - ComputeInstanceMax
      - Label:
          default: Networking and Access
        Parameters:
          - KeyName
          - AllowedIps
          - VpcId
          - HeadNodeSubnetId
          - ComputeNodesSubnetIds
      - Label:
          default: Active Directory Configuration
        Parameters:
          - UserName
          - UserPassword
          - AdInstancesSubnetIds

Conditions:
  GovCloud: !Equals [!Ref AWS::Partition, 'aws-us-gov']
  China: !Equals [!Ref AWS::Partition, 'aws-cn']

Parameters:

  UserName:
    Description: Cluster user that is created in the Active Directory.
    Type: String
    Default: user000
    MinLength: 3
    MaxLength: 64

  UserPassword:
    Description: Cluster user Password.
    Type: String
    MinLength: 8
    MaxLength: 64
    AllowedPattern: (?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*
    NoEcho: true

  QueueName:
    Description: Name of the default Slurm queue
    Type: String
    Default: normal

  ComputeInstanceMax:
    Description: Maximum number of compute instances in the queue
    Type: Number
    MinValue: 1
    Default: 10

  AllowedIps:
    Description: CIDR-formatted IP range for SSH connections to the cluster. If you want to allow access from all IP addresses, enter "0.0.0.0/0". However, we recommend you use a more restricitve setting, such as your own IP address. 
    Type: String
    AllowedPattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: 'Must be IPv4 CIDR notation: X.X.X.X/X' 

  KeyName:
    Description: Key pair for SSH login
    Type: AWS::EC2::KeyPair::KeyName

  OS:
    Type: String
    Default: alinux2
    AllowedValues:
      - alinux2
      - centos7
      - ubuntu1804
      - ubuntu2004
    Description: Cluster operating system

  Architecture:
    Type: String
    Default: Graviton
    AllowedValues:
      - Graviton
      - GPU
      - x86
    Description: Choose a node architecture.

  VpcId:
    Description: VPC where cluster and AD instances will be deployed
    Type: AWS::EC2::VPC::Id

  HeadNodeSubnetId:
    Description: Public subnet for head node
    Type: AWS::EC2::Subnet::Id

  ComputeNodesSubnetIds:
    Description: Subnet(s) for compute nodes. Private subnets are recommended. If multiple are selected, they must be in different AZs. 
    Type: List<AWS::EC2::Subnet::Id>

  AdInstancesSubnetIds:
    Description: Subnet(s) for Active Directory controller instances. Private subnets are recommended. Must be in different AZs. 
    Type: List<AWS::EC2::Subnet::Id>

Mappings:
  ParallelCluster:
    Constants:
      Version: 3.6.1
  Recipes:
    Constants:
      Version: main
  InstanceTypeForArchitecture:
    HeadNode:
      Graviton: c7g.medium
      GPU: c6a.large
      x86: c6a.large
    LoginNodes:
      Graviton: c7g.large
      GPU: c6a.xlarge
      x86: c6a.xlarge
    ComputeNodes:
      Graviton: c7g.xlarge
      GPU: g5.xlarge
      x86: c6a.xlarge

Resources:

  PclusterClusterProvider:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub
        - https://${AWS::Region}-aws-parallelcluster.s3.${AWS::Region}.${AWS::URLSuffix}/parallelcluster/${Version}/templates/custom_resource/cluster.yaml
        - { Version: !FindInMap [ParallelCluster, Constants, Version] }
      TimeoutInMinutes: 10

  AdminPasswordSecret:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties: 
      Name: Pcluster-AD-Admin-Password
      Description: Admin Password for AWS Microsfoft Managed AD
      GenerateSecretString: 
          ExcludeLowercase: False
          ExcludeNumbers: False
          ExcludePunctuation: True
          ExcludeUppercase: False
          IncludeSpace: False
          PasswordLength: 32
          RequireEachIncludedType: True
 
  ReadonlyPasswordSecret:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties: 
      Name: Pcluster-AD-Readonly-Password
      Description: Read-only Password for AWS Microsfoft Managed AD
      GenerateSecretString: 
          ExcludeLowercase: False
          ExcludeNumbers: False
          ExcludePunctuation: True
          ExcludeUppercase: False
          IncludeSpace: False
          PasswordLength: 32
          RequireEachIncludedType: True

  ManagedAD:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        DomainName: !Sub ${AWS::StackName}.ad.pcluster.com
        AdminPassword: !Sub "{{resolve:secretsmanager:${AdminPasswordSecret}}}"
        ReadOnlyPassword: !Sub "{{resolve:secretsmanager:${ReadonlyPasswordSecret}}}"
        UserName: !Ref UserName
        UserPassword: !Ref UserPassword
        Keypair: !Ref KeyName
        Vpc: !Ref VpcId
        PrivateSubnetOne: {"Fn::Select": [0, !Ref AdInstancesSubnetIds]}
        PrivateSubnetTwo: {"Fn::Select": [1, !Ref AdInstancesSubnetIds]}
      TemplateURL: !Sub
        - https://aws-hpc-recipes.s3.us-east-1.${AWS::URLSuffix}/${Version}/recipes/dir/demo_managed_ad/assets/main.yaml
        - { Version: !FindInMap [Recipes, Constants, Version] }
      TimeoutInMinutes: 60

  PclusterCluster:
    Type: Custom::PclusterCluster
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      ServiceToken: !GetAtt [ PclusterClusterProvider , Outputs.ServiceToken ]
      ClusterName: !Sub 'c-${AWS::StackName}'
      ClusterConfiguration:
        Image:
          Os: !Ref OS
        HeadNode:
          InstanceType: !FindInMap [ InstanceTypeForArchitecture, HeadNode, !Ref Architecture ]
          Networking:
            SubnetId: !Ref HeadNodeSubnetId
          Ssh:
            KeyName: !Ref KeyName
            AllowedIps: !Ref AllowedIps
          Iam:
            AdditionalIamPolicies:
              - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        DirectoryService:
          DomainName: !GetAtt [ ManagedAD , Outputs.DomainName ]
          DomainAddr: !GetAtt [ ManagedAD , Outputs.DomainAddrLdap ]
          PasswordSecretArn: !GetAtt [ ManagedAD , Outputs.PasswordSecretArn ]
          DomainReadOnlyUser: !GetAtt [ ManagedAD , Outputs.DomainReadOnlyUser ]
          AdditionalSssdConfigs:
            ldap_auth_disable_tls_never_use_in_production: True
        Scheduling:
          Scheduler: slurm
          SlurmSettings:
            QueueUpdateStrategy: TERMINATE
          SlurmQueues:
          - Name: !Ref QueueName
            ComputeResources:
            - Name: nodes
              Instances:
                - InstanceType: !FindInMap [ InstanceTypeForArchitecture, ComputeNodes, !Ref Architecture ]
              MinCount: 0
              MaxCount: !Ref ComputeInstanceMax
            Networking:
              SubnetIds: !Ref ComputeNodesSubnetIds

Outputs:
  HeadNodeIp:
    Description: The Public IP address of the HeadNode
    Value: !GetAtt [ PclusterCluster, headNode.publicIpAddress ]
    Export:
      Name: !Sub ${AWS::StackName}-HeadNodeIp
  SystemManagerUrl:
    Description: URL to access the HeadNode via SystemManager
    Value: !Sub
      - https://${ConsoleDomain}/systems-manager/session-manager/${InstanceId}?region=${AWS::Region}
      - { ConsoleDomain: !If [ GovCloud, 'console.amazonaws-us-gov.com', !If [ China, 'console.amazonaws.cn', !Sub '${AWS::Region}.console.aws.amazon.com']],
          InstanceId: !GetAtt [ PclusterCluster, headNode.instanceId ]
        }
    Export:
      Name: !Sub ${AWS::StackName}-SystemManagerUrl
  ValidationMessages:
    Description: Warnings from cluster create or update operations.
    Value: !GetAtt PclusterCluster.validationMessages
  AdDirectoryId:
    Description: AWS Managed Microsft AD ID
    Value: !GetAtt [ ManagedAD, Outputs.DirectoryId ]
  AdDomainName:
    Description: AD domain name
    Value: !GetAtt [ ManagedAD, Outputs.DomainName ]
  AdLDAPAddress:
    Description: AD LDAP address
    Value: !GetAtt [ ManagedAD, Outputs.DomainAddrLdap ]
  AdAdminPasswordSecretArn:
    Description: Secret where the AD administrator password is stored
    Value: !Ref AdminPasswordSecret
  AdDomainManagementNodeId:
    Description: Instance ID for AD management node
    Value: !GetAtt [ ManagedAD, Outputs.DomainManagementNodeId ]

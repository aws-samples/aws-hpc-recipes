AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Demonstrates the new Login Nodes feature in ParallelCluster 3.7.0. This alternate template allows you to specify subnet IDs directly rather than importing them from an existing stack.

### Stack metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Cluster Design
        Parameters:
          - OS
          - Architecture
          - QueueName
          - ComputeInstanceMax
      - Label:
          default: Login Nodes
        Parameters:
            - LoginNodeCount
            - KeyName
            - AllowedIps
      - Label:
          default: Networking and Access
        Parameters:
          - HeadNodeSubnetId
          - LoginNodesSubnetId
          - ComputeNodesSubnetId
      - Label:
          default: Miscellaneous
        Parameters:
          - ClusterName

Conditions:
  GovCloud: !Equals [!Ref AWS::Partition, 'aws-us-gov']
  China: !Equals [!Ref AWS::Partition, 'aws-cn']

Parameters:
  ClusterName:
    Description: Name of cluster. This must be unqiue in the Region and different than the stack name.
    Type: String
    Default: mycluster

  QueueName:
    Description: Name of the default Slurm queue
    Type: String
    Default: normal

  ComputeInstanceMax:
    Description: Maximum number of compute instances in the queue
    Type: Number
    MinValue: 1
    Default: 10

  AllowedIps:
    Description: CIDR-formatted IP range for SSH connections to the cluster
    Type: String
    Default: 0.0.0.0/0

  KeyName:
    Description: Key pair for SSH login
    Type: AWS::EC2::KeyPair::KeyName

  OS:
    Type: String
    Default: alinux2
    AllowedValues:
      - alinux2
      - centos7
      - ubuntu1804
      - ubuntu2004
    Description: Cluster operating system

  Architecture:
    Type: String
    Default: Graviton
    AllowedValues:
      - Graviton
      - GPU
      - x86
    Description: Choose a node architecture.

  LoginNodeCount:
    Type: Number
    Description: Number of login nodes to launch
    Default: 2
    MinValue: 1

  HeadNodeSubnetId:
    Description: Subnet for head node
    Type: AWS::EC2::Subnet::Id

  LoginNodesSubnetId:
    Description: Subnet for login nodes (recommended this is a public subnet)
    Type: AWS::EC2::Subnet::Id

  ComputeNodesSubnetId:
    Description: Subnet for compute nodes
    Type: List<AWS::EC2::Subnet::Id>


Mappings:
  ParallelCluster:
    Constants:
      Version: 3.7.0
  Recipes:
    Constants:
      Version: main
  InstanceTypeForArchitecture:
    HeadNode:
      Graviton: c7g.medium
      GPU: c6a.large
      x86: c6a.large
    LoginNodes:
      Graviton: c7g.large
      GPU: c6a.xlarge
      x86: c6a.xlarge
    ComputeNodes:
      Graviton: c7g.xlarge
      GPU: g5.xlarge
      x86: c6a.xlarge

Resources:

  PclusterClusterProvider:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub
        - https://${AWS::Region}-aws-parallelcluster.s3.${AWS::Region}.${AWS::URLSuffix}/parallelcluster/${Version}/templates/custom_resource/cluster.yaml
        - { Version: !FindInMap [ParallelCluster, Constants, Version] }
      TimeoutInMinutes: 10

  PclusterCluster:
    Type: Custom::PclusterCluster
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      ServiceToken: !GetAtt [ PclusterClusterProvider , Outputs.ServiceToken ]
      ClusterName: !Ref ClusterName
      ClusterConfiguration:
        Image:
          Os: !Ref OS
        HeadNode:
          InstanceType: !FindInMap [ InstanceTypeForArchitecture, HeadNode, !Ref Architecture ]
          Networking:
            SubnetId: !Ref HeadNodeSubnetId
          Ssh:
            KeyName: !Ref KeyName
            AllowedIps: !Ref AllowedIps
          Dcv:
            Enabled: false
          LocalStorage:
            RootVolume:
              Size: 40
          Iam:
            AdditionalIamPolicies:
              - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        LoginNodes:
          Pools:
             - Name: external
               Count: !Ref LoginNodeCount
               InstanceType: !FindInMap [ InstanceTypeForArchitecture, LoginNodes, !Ref Architecture ]
               GracetimePeriod: 5
               Ssh:
                KeyName: !Ref KeyName
               Networking:
                SubnetIds: 
                  - !Ref LoginNodesSubnetId
               Iam:
                 AdditionalIamPolicies:
                  - Policy: arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        Scheduling:
          Scheduler: slurm
          SlurmSettings:
            QueueUpdateStrategy: TERMINATE
          SlurmQueues:
          - Name: !Ref QueueName
            ComputeResources:
            - Name: nodes
              InstanceType: !FindInMap [ InstanceTypeForArchitecture, ComputeNodes, !Ref Architecture ]
              MinCount: 0
              MaxCount: !Ref ComputeInstanceMax
              DisableSimultaneousMultithreading: true
            Networking:
              SubnetIds:
                - !Ref ComputeNodesSubnetId
              PlacementGroup:
                Enabled: true
            ComputeSettings:
              LocalStorage:
                RootVolume:
                  Size: 40
        SharedStorage:
        - StorageType: Efs
          Name: shared
          MountDir: /shared
          EfsSettings:
            DeletionPolicy: Delete

Outputs:
  LoginNodesAddress:
    Description: DNS address for login node SSH access
    Value: !GetAtt [ PclusterCluster, loginNodes.address ]
    Export:
      Name: !Sub ${AWS::StackName}-LoginNodesAddress
  SystemManagerUrl:
    Description: URL to access the HeadNode via SystemManager
    Value: !Sub
      - https://${ConsoleDomain}/systems-manager/session-manager/${InstanceId}?region=${AWS::Region}
      - { ConsoleDomain: !If [ GovCloud, 'console.amazonaws-us-gov.com', !If [ China, 'console.amazonaws.cn', !Sub '${AWS::Region}.console.aws.amazon.com']],
          InstanceId: !GetAtt [ PclusterCluster, headNode.instanceId ]
        }
    Export:
      Name: !Sub ${AWS::StackName}-SystemManagerUrl
  ValidationMessages:
    Description: Warnings from cluster create or update operations.
    Value: !GetAtt PclusterCluster.validationMessages

Description: A demo CloudFormation stack for setting up Research and Engineering Studio on AWS

Parameters:
  PortalDomainName:
    Description: Domain Name for web portal domain that lives in Route53 in account (may be different from the Active Directory domain). Used to generate certificates.
    Type: String
    AllowedPattern: ^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$
    Default: res.person.people.aws.dev

  Keypair:
    Description: EC2 Keypair to access management instance.
    Type: AWS::EC2::KeyPair::KeyName
    Default: enguard

  EnvironmentName:
    Description: Provide name of the RES Environment. It must start with "res-", may not contain "aws", and entire name must be less than or equal to 10 characters (lowercase, numbers, hypens are permitted). Required to generate certificates and create RES stack.
    Type: String
    Default: res-demo
    MinLength: 5
    MaxLength: 10
    AllowedPattern: ^(?!.*aws)res-[a-z0-9-]{1,6}$

  AdministratorEmail:
    Type: String
    Default: person@amazon.com
    AllowedPattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$

  ClientIpCidr:
    Description: CIDR for incoming RDP traffic for management instance.
    Default: 127.0.0.1/32
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: ClientIP must be a valid IP or network range of the form x.x.x.x/x. specify your IP/NETMASK (e.g x.x.x/32 or x.x.x.x/24 for subnet range)

Conditions:
  UseEnvironmentName: !Not [!Equals [!Ref EnvironmentName, '']]

Resources:
  AdminPassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Active Directory Administrator Account Password.
      Name: !Sub [ "res-AdminPassword-${StackName}-${StackId}", {StackName: !Select [1, !Split ['/', !Ref 'AWS::StackId']], StackId: !Select [2, !Split ['/', !Ref 'AWS::StackId']]}]
      GenerateSecretString:
        SecretStringTemplate: '{"username": "res-admin"}'
        GenerateStringKey: "password"
        ExcludeCharacters: '"@/\(){}[]`|;:~#'
      Tags:
        - Key: res:Deployment
          Value: "true"
        - Key: res:EnvironmentName
          Value: !Ref EnvironmentName
  
  ServiceAccountPassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Active Directory Service Account Password.
      Name: !Sub [ "res-ServiceAccountPassword-${StackName}-${StackId}", {StackName: !Select [1, !Split ['/', !Ref 'AWS::StackId']], StackId: !Select [2, !Split ['/', !Ref 'AWS::StackId']]}]
      GenerateSecretString:
        SecretStringTemplate: '{"username": "res-service-account"}'
        GenerateStringKey: "password"
        ExcludeCharacters: '"@/\(){}[]`|;:~#'
      Tags:
        - Key: res:Deployment
          Value: "true"
        - Key: res:EnvironmentName
          Value: !Ref EnvironmentName
  
  RESExternal:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PortalDomainName: !Ref PortalDomainName
        Keypair: !Ref Keypair
        EnvironmentName: !If [UseEnvironmentName, !Ref EnvironmentName, '']
        AdminPassword: !Ref AdminPassword
        ServiceAccountPassword: !Ref ServiceAccountPassword
        ClientIpCidr: !Ref ClientIpCidr
      TemplateURL: https://aws-hpc-recipes-dev.s3.us-east-1.amazonaws.com/res/recipes/res/res_demo_env/assets/bi.yaml

  RES:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        AdministratorEmail: !Ref AdministratorEmail
        SSHKeyPair: !Ref Keypair
        ClientIp: !Ref ClientIpCidr
        VpcId: !GetAtt [ RESExternal, Outputs.VpcId ]
        PrivateSubnets: !GetAtt [ RESExternal, Outputs.PrivateSubnets ]
        PublicSubnets: !GetAtt [ RESExternal, Outputs.PublicSubnets ]
        ActiveDirectoryName: !GetAtt [ RESExternal, Outputs.ActiveDirectoryName ]
        ADShortName: !GetAtt [ RESExternal, Outputs.ADShortName ]
        LDAPBase: !GetAtt [ RESExternal, Outputs.LDAPBase ]
        LDAPConnectionURI: !GetAtt [ RESExternal, Outputs.LDAPConnectionURI ]
        SudoersGroupName: RESAdministrators
        CustomDomainNameforVDI: !Sub
          - vdi.${PortalDomainName}
          - { PortalDomainName: !Ref PortalDomainName}
        CustomDomainNameforWebApp: !Sub
          - web.${PortalDomainName}
          - { PortalDomainName: !Ref PortalDomainName}
        ACMCertificateARNforWebApp: !GetAtt [ RESExternal, Outputs.ACMCertificateARNforWebApp ]
        PrivateKeySecretARNforVDI: !GetAtt [ RESExternal, Outputs.PrivateKeySecretArn ]
        CertificateSecretARNforVDI: !GetAtt [ RESExternal, Outputs.CertificateSecretArn ]
        ServiceAccountUserName: !GetAtt [ RESExternal, Outputs.ServiceAccountUserName ]
        ServiceAccountPassword: !Sub "{{resolve:secretsmanager:${AdminPassword}:SecretString:password}}"
        UsersOU: !GetAtt [ RESExternal, Outputs.UsersOU ]
        GroupsOU: !GetAtt [ RESExternal, Outputs.GroupsOU ]
        SudoersOU: !GetAtt [ RESExternal, Outputs.SudoersOU ]
        ComputersOU: !GetAtt [ RESExternal, Outputs.ComputersOU ]
        SharedHomeFileSystemId: !GetAtt [ RESExternal, Outputs.SharedHomeFilesystemId ]
      TemplateURL: https://research-engineering-studio-us-east-1.s3.amazonaws.com/releases/2023.10b1/ResearchAndEngineeringStudio.template.json

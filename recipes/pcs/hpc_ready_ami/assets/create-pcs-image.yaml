AWSTemplateFormatVersion: '2010-09-09'
Description: Build a PCS-compatible AMI

Mappings:
  # AMI IDs are region-specific. These are for us-east-2. 
  # We use SSM to lookup AMIs across regions. See line 121. 
  DistroConfigs:
    amzn-2:
      name: Amazon Linux 2
      deviceName: /dev/xvda
      size: 64
      x86: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
      arm64: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2
    rocky-9:
      name: Rocky Linux 9
      deviceName: /dev/sda1
      size: 64
      # Rocky Linux 9.3 community edition AMIs
      x86: ami-067daee80a6d36ac0
      arm64: ami-034ee457b85b2fb4f
    rhel-9:
      name: RHEL 9
      deviceName: /dev/sda1
      size: 64
      x86: ami-0aa8fc2422063977a
      arm64: ami-08f9f3bb075432791
    ubuntu-22-04:
      name: Ubuntu 22.04
      deviceName: /dev/sda1
      size: 64
      x86: /aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id
      arm64: /aws/service/canonical/ubuntu/server/22.04/stable/current/arm64/hvm/ebs-gp2/ami-id
  InstanceConfigs:
    x86:
      default: 
        - c6i.8xlarge
        - m6i.8xlarge
      alternate: 
        - c6a.8xlarge
        - m6a.8xlarge
    arm64:
      default: 
        - c7g.8xlarge
        - m7g.8xlarge
      alternate: 
        - c6g.8xlarge
        - m6g.8xlarge

Parameters:

  Distro:
    Type: String
    AllowedValues:
      - amzn-2
      - rocky-9
      - rhel-9
      - ubuntu-22-04
    Default: amzn-2
  Architecture:
    Type: String
    AllowedValues:
      - x86
      - arm64
    Default: arm64

  SemanticVersion:
    Type: String
    Default: '0.0.1'
    Description: ImageBuilder needs date as version string

  # Substack Parameters
  HpcRecipesS3Bucket:
    Type: String
    Default: aws-hpc-recipes
    Description: HPC Recipes for AWS S3 bucket
    AllowedValues:
         - aws-hpc-recipes
         - aws-hpc-recipes-dev
  HpcRecipesBranch:
    Type: String
    Default: main
    Description: HPC Recipes for AWS release branch
    AllowedPattern: '^(?!.*/\.git$)(?!.*/\.)(?!.*\\.\.)[a-zA-Z0-9-_\.]+$'
  # /Substack Parameters

Conditions: 
  DistroImageStartsWithAmi: !Equals 
    - !Select
      - 0
      - !Split 
        - "-"
        - !FindInMap [ DistroConfigs, !Ref Distro, !Ref Architecture]
    - "ami"

Resources:
  ImageBuilderComponentsStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        HpcRecipesS3Bucket: !Ref HpcRecipesS3Bucket
        HpcRecipesBranch: !Ref HpcRecipesBranch
      TemplateURL: !Sub 'https://${HpcRecipesS3Bucket}.s3.us-east-1.amazonaws.com/${HpcRecipesBranch}/recipes/pcs/hpc_ready_ami/assets/nested-imagebuilder-components.yaml'

  PCSImageRecipe:
    Type: AWS::ImageBuilder::ImageRecipe
    Properties:
      # Ordering is important here
      Components:
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.UpdateOsComponent]
        - ComponentArn: !Sub 'arn:aws:imagebuilder:${AWS::Region}:aws:component/reboot-linux/1.0.1/1'
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.OptimizePerformanceComponent]
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.CloudwatchAgentComponent]
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.SsmAgentComponent]
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.EfaInstallerComponent]
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.LustreInstallerComponent]
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.EfsUtilsInstallerComponent]
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.PcsAgentInstallerComponent]
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.PcsSlurmInstallerComponent]
        - ComponentArn: !GetAtt [ImageBuilderComponentsStack, Outputs.SpackInstallerComponent]
      Description: Install PCS Agent, SLURM, and other components
      # Appending StackName enables multiple Recipes with the same base name, 
      # which is important for debugging.
      Name: !Sub 'pcs_ami-${Distro}-${Architecture}-${AWS::StackName}'
      ParentImage: !If 
        - DistroImageStartsWithAmi
        - !FindInMap [DistroConfigs, !Ref Distro, !Ref Architecture]
        - !Sub 
          - '{{resolve:ssm:${AMILookup}}}'
          - AMILookup: !FindInMap [DistroConfigs, !Ref Distro, !Ref Architecture]
      Version: !Ref SemanticVersion
      AdditionalInstanceConfiguration:
        SystemsManagerAgent:
          UninstallAfterBuild: false
      BlockDeviceMappings:
        - DeviceName: !FindInMap [DistroConfigs, !Ref Distro, deviceName]
          Ebs:
            DeleteOnTermination: true
            VolumeSize: !FindInMap [DistroConfigs, !Ref Distro, size]

  PCSInfrastructureConfiguration:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      Description: !Sub '${Architecture} infrastructure'
      InstanceProfileName: EC2InstanceProfileForImageBuilder
      InstanceTypes: !FindInMap [InstanceConfigs, !Ref Architecture, 'default']
      # Appending StackName enables multiple Infra configs with the same base name, 
      # which is important for debugging.
      Name: !Sub 'pcs_ami-${Architecture}-${AWS::StackName}'

  PCSDistributionConfiguration:
    Type: AWS::ImageBuilder::DistributionConfiguration
    Properties:
      # Appending StackName enables multiple Distribution configs with the same base name, 
      # which is important for debugging.
      Name: !Sub 'pcs_ami-${Distro}-${Architecture}-${AWS::StackName}'
      Description: PCS image distributor
      Distributions:
        - Region: !Ref "AWS::Region"
          AmiDistributionConfiguration:
            Name: !Sub 'cfnpcs_ami-${Distro}-${Architecture} {{ imagebuilder:buildDate }}'
            Description: 'Distribute a copy of the AMI to specific accounts in the destination Region.'
            # Uncomment and provide AWS account IDs to share AMI once built
            # LaunchPermissionConfiguration:
            #   UserIds:
            #     - '000000000000'
            #     - '111111111111'

  PCSImage:
    Type: AWS::ImageBuilder::Image
    Properties:
      DistributionConfigurationArn: !GetAtt PCSDistributionConfiguration.Arn
      ImageRecipeArn: !GetAtt PCSImageRecipe.Arn
      InfrastructureConfigurationArn: !GetAtt PCSInfrastructureConfiguration.Arn

Outputs:
  Image:
    Value: !Ref PCSImage

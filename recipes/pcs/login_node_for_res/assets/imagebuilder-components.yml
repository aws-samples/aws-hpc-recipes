AWSTemplateFormatVersion: '2010-09-09'
Description: ImageBuilder Components for AWS PCS-ready AMIs

### Stack metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Installer Configuration
        Parameters:
          - SlurmVersion
      - Label:
          default: HPC Recipes Configuration
        Parameters:
          - HpcRecipesS3Bucket
          - HpcRecipesBranch

Parameters:
  SlurmVersion:
    Type: String
    Default: '24.05'
    Description: Slurm version (e.g. 24.05)
    AllowedValues:
         - '23.11'
         - '24.05'
  HpcRecipesS3Bucket:
    Type: String
    Default: aws-hpc-recipes
    Description: HPC Recipes for AWS S3 bucket
    AllowedValues:
         - aws-hpc-recipes
         - aws-hpc-recipes-dev
  HpcRecipesBranch:
    Type: String
    Default: main
    Description: HPC Recipes for AWS release branch
    AllowedPattern: '^(?!.*/\.git$)(?!.*/\.)(?!.*\\.\.)[a-zA-Z0-9-_\.]+$'

Resources:

  PcsAgentInstallerStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        HpcRecipesS3Bucket: !Ref HpcRecipesS3Bucket
        HpcRecipesBranch: !Ref HpcRecipesBranch
      TemplateURL: !Sub 'https://${HpcRecipesS3Bucket}.s3.us-east-1.amazonaws.com/${HpcRecipesBranch}/recipes/pcs/hpc_ready_ami/assets/components/install-pcs-agent.yaml'
      TimeoutInMinutes: 10

  PcsSlurmInstallerStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Parameters:
        SlurmVersion: !Ref SlurmVersion
        HpcRecipesS3Bucket: !Ref HpcRecipesS3Bucket
        HpcRecipesBranch: !Ref HpcRecipesBranch
      TemplateURL: !Sub 'https://${HpcRecipesS3Bucket}.s3.us-east-1.amazonaws.com/${HpcRecipesBranch}/recipes/pcs/hpc_ready_ami/assets/components/install-pcs-slurm.yaml'
      TimeoutInMinutes: 10

  ResLinuxComponentInstallerStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub 'https://${HpcRecipesS3Bucket}.s3.us-east-1.amazonaws.com/${HpcRecipesBranch}/recipes/res/res_ready_ami/assets/components/research-and-engineering-studio-vdi-linux.yaml'
      TimeoutInMinutes: 10

  # Add an ImageBuilder::Component
  RESPCSLoginNodeComponent:
    Type: 'AWS::ImageBuilder::Component'
    Properties:
      Name: 'res-pcs-login-node-post-install'
      Description: 'Component to enable RES integration with Parallel Computing Service'
      Platform: Linux
      Version: '1.0.0'
      Data: !Sub |
        name: res-pcs-login-node-post-install
        description: A component to configure a Parallel Computing Service Login Node
        schemaVersion: 1.0
        parameters:
          - Region:
              type: string
              description: AWS Region
          - ClusterId:
              type: string
              description: PCS Cluster id (e.g. pcs-abc1234)
          - SlurmVersion:
              type: string
              description: Slurm version (e.g. 23.11)
              default: "${SlurmVersion}"
        phases:
          - name: build
            steps:
              - name: Install
                action: ExecuteBash
                onFailure: Abort
                maxAttempts: 3
                inputs:
                    commands:
                      - |
                        region='{{Region}}'
                        cluster_id='{{ClusterId}}'
                        slurm_version='{{SlurmVersion}}'

                        # Get cluster details
                        slurm_ip=$(aws pcs get-cluster --region $region --cluster-identifier $cluster_id --query "cluster.endpoints[0].privateIpAddress")
                        slurm_port=$(aws pcs get-cluster --region $region --cluster-identifier $cluster_id --query "cluster.endpoints[0].port")
                        slurm_key_arn=$(aws pcs get-cluster --region $region --cluster-identifier $cluster_id --query "cluster.slurmConfiguration.authKey.secretArn")

                        #strip the double-quote 
                        slurm_ip=$(echo ${!slurm_ip} | tr -d '"')
                        slurm_port=$(echo ${!slurm_port} | tr -d '"')
                        slurm_key_arn=$(echo ${!slurm_key_arn} | tr -d '"')

                        mkdir -p /etc/slurm

                        aws secretsmanager get-secret-value \
                            --region $region \
                            --secret-id ${!slurm_key_arn} \
                            --version-stage AWSCURRENT \
                            --query 'SecretString' \
                            --output text | base64 -d > /etc/slurm/slurm.key

                        chmod 0600 /etc/slurm/slurm.key
                        chown slurm:slurm /etc/slurm/slurm.key

                        mkdir -p /etc/sysconfig/
                        echo "SACKD_OPTIONS='--conf-server=${!slurm_ip}:${!slurm_port}'" > /etc/sysconfig/sackd

                        sudo cat << EOF > /etc/systemd/system/sackd.service
                        [Unit]
                        Description=Slurm auth and cred kiosk daemon
                        After=network-online.target remote-fs.target
                        Wants=network-online.target
                        ConditionPathExists=/etc/sysconfig/sackd

                        [Service]
                        Type=notify
                        EnvironmentFile=/etc/sysconfig/sackd
                        User=slurm
                        Group=slurm
                        RuntimeDirectory=slurm
                        RuntimeDirectoryMode=0755
                        ExecStart=/opt/aws/pcs/scheduler/slurm-${!slurm_version}/sbin/sackd --systemd \$SACKD_OPTIONS
                        ExecReload=/bin/kill -HUP \$MAINPID
                        KillMode=process
                        LimitNOFILE=131072
                        LimitMEMLOCK=infinity
                        LimitSTACK=infinity

                        [Install]
                        WantedBy=multi-user.target
                        EOF

                        sudo chown root:root /etc/systemd/system/sackd.service && \
                            sudo chmod 0644 /etc/systemd/system/sackd.service

                        sudo systemctl daemon-reload && sudo systemctl enable sackd
                        sudo systemctl start sackd

Outputs:
  PcsAgentInstallerComponent:
    Description: PcsAgentInstallerComponent
    Value: !GetAtt [ PcsAgentInstallerStack, Outputs.ImageBuilderComponent ]
    Export:
      Name: !Sub "${AWS::StackName}-PcsAgentInstallerComponent"
  PcsSlurmInstallerComponent:
    Description: PcsSlurmInstallerComponent
    Value: !GetAtt [ PcsSlurmInstallerStack, Outputs.ImageBuilderComponent ]
    Export:
      Name: !Sub "${AWS::StackName}-PcsSlurmInstallerComponent"
  ResLinuxComponent:
    Description: ResLinuxComponent
    Value: !GetAtt [ ResLinuxComponentInstallerStack, Outputs.ImageBuilderComponent ]
    Export:
      Name: !Sub "${AWS::StackName}-ResLinuxComponent"
  RESPCSLoginNodeComponent:
    Description: RESPCSLoginNodeComponent
    Value: !Ref RESPCSLoginNodeComponent
    Export:
      Name: !Sub "${AWS::StackName}-RESPCSLoginNodeComponent"

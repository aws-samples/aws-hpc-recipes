AWSTemplateFormatVersion: '2010-09-09'
Description: Create an EC2 Placement Group with a custom name.

Parameters:
  PlacementGroupName:
    Type: String
    Description: The name for the EC2 Placement Group

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: AllowEC2PlacementGroupManagement
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreatePlacementGroup
                  - ec2:DeletePlacementGroup
                  - ec2:DescribePlacementGroups
                Resource: '*'

  PlacementGroupFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3
          import cfnresponse

          def handler(event, context):
              ec2 = boto3.client('ec2')
              responseData = {}

              try:
                  if event['RequestType'] == 'Create':
                      ec2.create_placement_group(
                          GroupName=event['ResourceProperties']['PlacementGroupName'],
                          Strategy='cluster'
                      )
                      # Get the placement group ID
                      response = ec2.describe_placement_groups(
                          GroupNames=[event['ResourceProperties']['PlacementGroupName']]
                      )
                      placement_group_id = response['PlacementGroups'][0]['GroupId']
                      responseData['PlacementGroupName'] = event['ResourceProperties']['PlacementGroupName'
                      responseData['PlacementGroupId'] = placement_group_id
                      responseData['Message'] = f"Placement group {event['ResourceProperties']['PlacementGroupName']} created successfully"
                  elif event['RequestType'] == 'Delete':
                      ec2.delete_placement_group(
                          GroupName=event['ResourceProperties']['PlacementGroupName']
                      )
                      responseData['Message'] = f"Placement group {event['ResourceProperties']['PlacementGroupName']} deleted successfully"
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
              except Exception as e:
                  responseData['Error'] = str(e)
                  cfnresponse.send(event, context, cfnresponse.FAILED, responseData)

      Runtime: python3.8
      Timeout: 30

  PlacementGroup:
    Type: Custom::PlacementGroup
    Properties:
      ServiceToken: !GetAtt PlacementGroupFunction.Arn
      PlacementGroupName: !Ref PlacementGroupName

Outputs:
  PlacementGroupName:
    Description: The name of the created EC2 Placement Group
    Value: !Ref PlacementGroupName
  PlacementGroupId:
    Description: The ID of the created EC2 Placement Group
    Value: !GetAtt PlacementGroup.PlacementGroupId